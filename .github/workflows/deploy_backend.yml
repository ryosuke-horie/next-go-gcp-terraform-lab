name: deploy backend

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'infra/**'
      - 'backend/**'

permissions:
  id-token: write
  contents: read
  pull-requests: write
  statuses: write

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
  DB_INSTANCE_NAME:  next-go-gcp-terraform-lab-db-instance
  DB_USER: sql-user 
  DB_NAME: next-go-gcp-terraform-lab-db	 

jobs:
  deploy_backend:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "projects/191083186598/locations/global/workloadIdentityPools/github-pool/providers/github-provider"
          service_account: "terraform@${{ secrets.GCP_PROJECT_ID }}.iam.gserviceaccount.com"

      - name: Configure Docker to use gcloud as a credential
        run: |
          gcloud auth configure-docker asia-southeast1-docker.pkg.dev

      - name: Docker Build&Push
        run: |
            docker buildx build --platform linux/amd64 \
                --target deploy \
                -t asia-southeast1-docker.pkg.dev/plasma-renderer-446307-u5/task-api-repositry/gotodo:latest \
                --push .
        working-directory: backend

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: |
          terraform init 
        working-directory: infra


      - name: Terraform Plan
        run: |
          terraform plan \
            -var="project_id=${{ env.PROJECT_ID }}" \
            -var="db_password=${{ env.TF_VAR_db_password }}" \
            -out=plan.out
        working-directory: infra

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve plan.out
        working-directory: infra

      - name: Download Cloud SQL Auth Proxy
        run: |
          curl -o cloud_sql_proxy https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64
          chmod +x cloud_sql_proxy

      - name: Start Cloud SQL Proxy
        run: |
          ./cloud_sql_proxy -instances=${{ env.PROJECT_ID }}:asia-southeast1:${{ env.DB_INSTANCE_NAME }}=tcp:5432 &
        env:
          DB_REGION: asia-southeast1

      - name: Apply SQL file to PostgreSQL
        run: |
          PGPASSWORD=${{ env.TF_VAR_db_password }} psql \
            -h 127.0.0.1 \
            -p 5432 \
            -U ${{ env.DB_USER }} \
            -d ${{ env.DB_NAME }} \
            -f ./backend/sql/create-tasks-table.sql
